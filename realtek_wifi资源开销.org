#+LATEX_HEADER: \usepackage{xeCJK}
#+LATEX_HEADER: \setCJKmainfont{STKaiti}
#+OPTIONS: \n:t ^:nil  toc:nil
#+TODO: TODO(t) STARTED(s) WAITING(w) | DONE(d) CANCELED(c)
* RTK模组需要的资源开销
使用stm32的板子， 使用realtek更新的FreeRTOS的SDK后， 可以正常的跑起来了，Wifi sta模式，驱动初始化完成，没做任何操作时heap内存使用，动态的heap加上静态内存大概80K左右， 在3503上， 南方硅谷的模组使用的内存不到30K，所以内存的差距在50K左右， 在3503或5118上很难再挤出来这么多的内存。
需要继续看下在zephyr上带起的情况
** 静态资源
| module name           | code size | data size | rodata size |
 | 模组使用的AT命令 | 2,854     |       928 |           0 |
 | wpa_supplicant        | 16,606    |       208 |       2,763 |
 | wifi相关API | 11,800    |       796 |         119 |
 | WIFI驱动 | 136,598   |     7,331 |      63,216 |
 | lwip协议栈       | 23,452    |    21,380 |         148 |
 | freertos            | 3,736     |    85,448 |           0 |
 | stm32f4xx  | 2,184     |        16 |           0 |
 | 其他              | 5,054     |       542 |          10 |
** 动态内存
Wifi sta模式，驱动初始化完成，没做任何操作时heap内存使用
| 任务stack占用             | 25832 |
| Wifi分配的动态内存        | 29770 |
| 小于100byte的分配占用内存 |  7406 |

* 320Kbps的音频流需要的buffer情况
目前故事机使用的公众号资源服务器的音乐资源，以及百科问答中点播的歌曲，都是通过http方式来下载的mp3，aac等压缩格式的文件。

这种使用音频文件方式的音乐资源，不像网络通话一样的音频流，使用特别的编码方式，能够通过算法来做去抖，补偿的方式来消除一些网络抖动的影响，目前采用的策略，主要还是靠网络缓冲数据的办法来平滑网络抖动。

** 3503使用psram做缓存的测试情况
所有测试连接的AP都是办公区的ap ACTZH-PAD-PMD
+--------------+--------------+-----------------------+------------+----------+----------------------------------------------------------------------+
| sram缓存大小 | 缓存时间(秒) | 测试时间段            | 时长(小时) | 卡顿次数 | 说明                                                                 |
+--------------+--------------+-----------------------+------------+----------+----------------------------------------------------------------------+
| 80K          | 2s           | 18:00 ~ 10:00         | 16h        |       10 | 在夜晚，干扰少，卡顿多为1、2秒内卡顿，早上10点一次出现10秒没数据     |
+--------------+--------------+-----------------------+------------+----------+----------------------------------------------------------------------+
| 120K         | 3s           | 13:00 ~ 16:00         | 3h         |       15 | 下午测试，卡顿也严重，多次连续数据量不足连续卡顿，出现一次10秒没数据 |
+--------------+--------------+-----------------------+------------+----------+----------------------------------------------------------------------+
| 240K         | 6s           | 13:30 ~ 17:00         | 3.5h       |        6 | 下午测试，都是长时间数据量不足卡顿                                   |
+--------------+--------------+-----------------------+------------+----------+----------------------------------------------------------------------+
| 360K         | 9s           | 9:00 ~ 12:00          | 3h         |       10 | 早上测试，长时间数据量不足卡顿                                       |
+--------------+--------------+-----------------------+------------+----------+----------------------------------------------------------------------+
| 512K         | 12s          | 9:30 ~ 13:30          | 4h         |       14 | 上班时间测试，长时间数据量不足卡顿                                   |
+--------------+--------------+-----------------------+------------+----------+----------------------------------------------------------------------+
| 1024K | 25s | 9/21 15:49 ~ 18:40,   | 17h | 5(12) | 上班时间及周六的测试，都是长时间数据量不足卡顿 |
|       |     | 9/23 10:16 ~ 16:59    |     |       |                                                |
|       |     | 9/25(sat) 9:8 ~ 17:24 |     |       |                                                |
+--------------+--------------+-----------------------+------------+----------+----------------------------------------------------------------------+

Note:
+ 公共AP PMD是办公区的一个AP，比测试组的环境稍好，但一般比家庭网络会差很多
+ 在夜晚网络情况较好的时候， 就算80K的buffer也不太容易遇到卡顿
+ 在上午网络性能比较恶劣的情况下， 只有加大到1024K的buffer，卡顿才会比较少
+ 长时间数据量不足卡顿
  长时间数据量不足（每秒接收数据不足320kbps）导致缓冲的数据全部消耗完以引起的卡顿
+ 1024K缓存的测试
  其中有12次在开始下载时就出现下载数据量不足导致卡顿，这种情况，即使使用卡缓存还是会出现卡顿, 上班时间及周六的测试，都是长时间数据量不足（每秒接收数据不足320kbps）导致连续卡顿 |
** 其他对手样机测试情况
*** 愤怒的小鸟
机子tcp传输window：11200
机子内网络数据缓存量约：60~80Kbyte（从无卡时开始下载数据量估算）
点播：即使有卡，也不进行缓存，所以有卡与没卡，多点几首，卡顿效果一样的；
机子下载音乐到卡速率（不播放）：750kbps；
测试的码率是256Kbps

| 测试条件 | AP           | 测试结果                          |
| 无卡     | 单独搭建的ap | 无其他人使用该ap，播放不卡顿      |
| 无卡     | 单独搭建的ap | 无其他人使用该ap，播放出现2次卡顿 |
| 无卡     | 单独搭建的ap | 一台手机连上该ap，浏览网页或播放视频，多次卡顿 |
| 有卡     | 单独搭建的ap | 无其他人使用该ap，播放不卡顿      |
| 有卡     | 单独搭建的ap |  一台手机连上该ap，浏览网页或播放视频，多次卡顿 |

Note：
+ 单独搭建AP性能
  单独搭建的ap，网络条件算作比较好的ap
*** ASU WIFI音箱
+ Tcp window
  大小为size：21000
  网络缓存数据量：大于80Kbyte    （从一次最大缓存的数据量计算）
  按这个缓存量计算，可以缓存10s的数据，并且播放码率较低，不容易出现卡顿，而干扰较大的情况下，还是会出现卡顿。
+ 播放的音乐码率：64kbps
  公众号上见到的音乐、在线广播，码率都是64kbps
  连接公共AP ACTZH-PAD-PMD，播放音乐，用一个手机连接该ap，切换视频播放，ASUWIFI音箱还是有时会出现音声卡顿。
* 几点思考
+ 在网络不太差的情况下， 资源比较丰富的IOT芯片，还是比较大的可能做到高码率不卡顿的
+ 需要想办法尽快找到市场能够接受的卡顿标准。如果标准较高的话， 大部分的iot芯片都应该不可以。
