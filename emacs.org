#+TITILE github
* github
** command line
   echo "# org" >> README.md
   git init
   git add README.md
   git commit -m "first commit"
   git remote add origin https://github.com/zhangdongfeng/org.git
   git push -u origin master

* emacs

** init.el
  git clone https://github.com/purcell/emacs.d.git ~/.emacs.d
  (require 'ido)
  (ido-mode t)
  (require 'xcscope)
  (add-hook 'c-mode-common-hook 'cscope-minor-mode)

** doc

  Emacs 24.4 Released, How to Install it in Ubuntu 14.04
  http://ubuntuhandbook.org/index.php/2014/10/emacs-24-4-released-install-in-ubuntu-14-04/
  https://www.emacswiki.org/emacs/SiteMap
  Emacs Starter Kit
  http://eschulte.github.io/emacs-starter-kit/
  magit
  https://github.com/magit/magit/blob/master/Documentation/magit.texi
  http://blog.csdn.net/amuseme_lu/article/details/6931908
  http://www.emacswiki.org/emacs/Magit
  https://magit.vc/manual/magit/Getting-started.html
  Emacs编辑器——王垠
  http://blog.csdn.net/superwen_go/article/details/8235185
  有哪些是必备的emacs扩展？
  https://www.zhihu.com/question/21943533
  Programming in Emacs+Sematic
  http://docs.huihoo.com/homepage/shredderyin/wiki/ProgrammingTricks.html
  Sams Teach Yourself Emacs in 24 Hours
  http://docs.huihoo.com/homepage/shredderyin/emacs24/index.htm
  我的Emacs折腾经验谈(一) 一些给新人的建议 –
  http://www.tuicool.com/articles/rIBBJn
  Emacs: How to Install Packages Using ELPA, MELPA
  http://ergoemacs.org/emacs/emacs_package_system.html
  Quickly finding project files using Emacs EDE
  http://stackoverflow.com/questions/23950534/quickly-finding-project-files-using-emacs-ede
  The function to show current file's full path in mini buffer
  http://stackoverflow.com/questions/3669511/the-function-to-show-current-files-full-path-in-mini-buffer
  Imenu显示符号列表
  http://www.gnu.org/software/emacs/manual/html_node/emacs/Imenu.html
  InteractivelyDoThings
  http://stackoverflow.com/questions/7394289/how-can-i-more-easily-switch-between-buffers-in-emacs
  https://www.emacswiki.org/emacs/InteractivelyDoThings
  Searching for marked (selected) text in Emacs
  http://www.gnu.org/software/emacs/manual/html_node/emacs/index.html#SEC_Contents
  Emacs dired 模式
  http://blog.csdn.net/cxmanzhao/article/details/5685016
  emacs 快捷键（包括C／C++模式）
  http://www.cnblogs.com/xinxianshi/archive/2011/07/20/2157264.html
  emacs + cscope 的使用
  http://blog.chinaunix.net/uid-20788636-id-1841254.html
  在Emacs下用C/C++编程
  http://blog.chinaunix.net/uid-9478057-id-2002272.html
  http://www.caole.net/diary/emacs_write_cpp.html
  使用gtags、etags、cscope、grep浏览源代码
  http://blog.csdn.net/wuyao721/article/details/3059242
  Cscope在emacs中的配置与使用
  http://www.cnblogs.com/jtf-china/articles/2077922.html
  一年成为Emacs高手(像神一样使用编辑器)
  http://blog.csdn.net/redguardtoo/article/details/7222501/
  https://www.emacswiki.org
  https://github.com/purcell/emacs.d
  https://www.emacswiki.org/emacs/EmacsWiki
  暴增 Emacs 生产力的十大最佳插件
  http://www.linuxidc.com/Linux/2016-01/127456.htm
  A Package in a league of its own: Helm
  http://tuhdo.github.io/helm-intro.html
  https://www.emacswiki.org/emacs/FindFileInProject
  rst mode in emacs on osx - cannot create pdf
  http://stackoverflow.com/questions/12602490/rst-mode-in-emacs-on-osx-cannot-create-pdf
  https://www.gnu.org/gnu/rms-lisp.html
  http://mirror.hust.edu.cn/gnu/
  https://en.wikipedia.org/wiki/Emacs_Lisp
** cscope
   find frameworks/ packages/ bionic/ dalvik/ bootable/ libcore/ -name '*.c' -print -o -name '*.h' -print -o -name '*.cpp' -print -o -name '*.java' -print > cscope.files
   cscope –b –q -k
   find frameworks/ packages/ bionic/ dalvik/ bootable/ libcore/ -name '*.c' -print -o -name '*.h' -print -o -name '*.cpp' -print -o -name '*.java' –print | xargs etags -a

* org

  http://www.cnblogs.com/Open_Source/archive/2011/07/17/2108747.html

  The Org Manual
  http://orgmode.org/org.html
  神器中的神器org-mode之入门篇
  http://www.cnblogs.com/qlwy/archive/2012/06/15/2551034.html
  org-mode: 最好的文档编辑利器，没有之一
  http://www.cnblogs.com/holbrook/archive/2012/04/12/2444992.html#3590958
  https://www.zhihu.com/question/27478438
  Org-mode 简明手册
  http://www.cnblogs.com/Open_Source/archive/2011/07/17/2108747.html


  S-TAB	循环切换整个文档的大纲状态（折叠、打开下一级、打开全部）
  TAB	循环切换光标所在的大纲状态
  C-c C-n/p	移动到下上一个标题（不断标题是哪一级）
  C-c C-f/b	移动到同一级别的下/上标题
  C-c C-u	跳到上一级标题
  C-c C-j	切换到大纲预览状态
  M-RET	插入一个同级别的标题
  M-S-RET	插入一个同级别的TODO标题

  M-LEFT/RIGHT	将当前标题升/降级
  M-S-LEFT/RIGHT	将子树升/降级
  M-S-UP/DOWN	将子树上/下移动
  C-c *	将本行设为标题或者正文
  C-c C-w	将子树或者区域移动到另一个标题处（跨缓冲区）
  C-c C-x b	在新缓冲区显示当前分支
  C-c /	只列出包含搜索结果的大纲，并高亮，支持多种搜索方式

** 列表
   My favorite scenes are (in this order)
   1. The attack of the Rohirrim
   2. Eowyn's fight with the witch king
      + this was already my favorite scene in the book
      + I really like Miranda Otto.
   3. Peter Jackson being shot by Legolas
      - on DVD only
      He makes a really funny face when it happens.
ORG-LIST-END-MARKER
   But in the end, no individual scenes matter but the film as a whole.
   Important actors in this film are:
   - Elijah Wood :: He plays Frodo
   - Sean Austin :: He plays Sam, Frodo's friend.  I still remember
     him very well from his role as Mikey Walsh in The Goonies.
ORG-LIST-END-MARKER

** 稀疏树

Org 模式的一个重要的功能是能根据大纲树中选择的信息构造出稀疏的树，这样文档就可以尽可能地折叠，但是选择的信息和它对应的标题会显示出来。试下就知道它是怎样工作的了。
Org 模式有几个命令可以创建这种树，这些命令都可以通过调度器来使用：
C-c /	它会提示再输入一个字符来选择稀疏树的创建命令。
C-c / r	触发后，会提示输入匹配串，并且将所有匹配的项显示成稀疏树。所有的匹配项都会高亮显示；按 C-c C-c 取消高亮。
** 表格

#+CAPTION: 表格的标题
|   | <6>    |
|---+--------|
| 1 | one    |
| 2 | two    |
| 3 | This is a long chunk of text |
| 4 | four   |


创建和转换
C-c | 将活动区域（选中区域）转换成一个表。如果第一行至少有一个 TAB 字符，就用 TAB 划分内容；如果第一行都有逗号，就分逗号划分内容；否则就用空白符来划分区域。如果当前没有活动区域就会建立一个空的 Org 表格。其实用|Name|Phone|Age C-c RET 来建表会更简单一点。
C-c C-c	调整表格，不移动光标
TAB	调整表格，将光标移到下一个区域，必要时新建一行
S-TAB	调整表格，将光标移到上一个区域
RET	调整表格，将光标移到下一行，必要时会新建一行

编辑行和列
M-LEFT/RIGHT	左/右移当前列
M-S-LEFT	删除当前行
M-S-RIGHT	在光标位置左边添加一列
M-UP/DOWN	上/下移当前行
M-S-UP	删除当前行
M-S-DOWN	在当前行上面添加一行。如果有前缀，则在下面添加一行
C-c -	在当前行下面添加一个水平线。如果带前缀，则在上面添加一行水平线
C-c RET	在当前行下面添加一个水平线。并将光标移动到下一行
C-c ^	将表排序。当前位置所在的列作为排序的依据。排序在距当前位置最近的两个水平线之间的行（或者整个表）中进行

** Org-Mode Reference Card (for version 7.8.11)
================================================================================
Getting Started
================================================================================
To read the on-line documentation try             M-x org-info

================================================================================
*** Visibility Cyclin
================================================================================

rotate current subtree between states             TAB
rotate entire buffer between states               S-TAB
restore property-dependent startup visibility     C-u C-u TAB
show the whole file, including drawers            C-u C-u C-u TAB
reveal context around point                       C-c C-r

================================================================================
*** Motion
================================================================================

next/previous heading                             C-c C-n/p
next/previous heading, same level                 C-c C-f/b
backward to higher level heading                  C-c C-u
jump to another place in document                 C-c C-j
previous/next plain list item                     S-UP/DOWN\notetwo

================================================================================
*** Structure Editing
================================================================================

insert new heading/item at current level          M-RET
insert new heading after subtree                  C-RET
insert new TODO entry/checkbox item               M-S-RET
insert TODO entry/ckbx after subtree              C-S-RET
turn (head)line into item, cycle item type        C-c -
turn item/line into headline                      C-c *
promote/demote heading                            M-LEFT/RIGHT
promote/demote current subtree                    M-S-LEFT/RIGHT
move subtree/list item up/down                    M-S-UP/DOWN
sort subtree/region/plain-list                    C-c ^
clone a subtree                                   C-c C-x c
copy visible text                                 C-c C-x v
kill/copy subtree                                 C-c C-x C-w/M-w
yank subtree                                      C-c C-x C-y or C-y
narrow buffer to subtree / widen                  C-x n s/w

================================================================================
*** Capture - Refile - Archiving
================================================================================
capture a new item (C-u C-u = goto last)          C-c c \noteone
refile subtree (C-u C-u = goto last)              C-c C-w
archive subtree using the default command         C-c C-x C-a
move subtree to archive file                      C-c C-x C-s
toggle ARCHIVE tag / to ARCHIVE sibling           C-c C-x a/A
force cycling of an ARCHIVEd tree                 C-TAB

================================================================================
*** Filtering and Sparse Trees
================================================================================

construct a sparse tree by various criteria       C-c /
view TODO's in sparse tree                        C-c / t/T
global TODO list in agenda mode                   C-c a t \noteone
time sorted view of current org file              C-c a L

================================================================================
*** Tables
================================================================================

--------------------------------------------------------------------------------
Creating a table
--------------------------------------------------------------------------------

just start typing, e.g.                           |Name|Phone|Age RET |- TAB
convert region to table                           C-c |
... separator at least 3 spaces                   C-3 C-c |

--------------------------------------------------------------------------------
Commands available inside tables
--------------------------------------------------------------------------------

The following commands work when the cursor is inside a table.
Outside of tables, the same keys may have other functionality.

--------------------------------------------------------------------------------
Re-aligning and field motion
--------------------------------------------------------------------------------

re-align the table without moving the cursor      C-c C-c
re-align the table, move to next field            TAB
move to previous field                            S-TAB
re-align the table, move to next row              RET
move to beginning/end of field                    M-a/e

--------------------------------------------------------------------------------
Row and column editing
--------------------------------------------------------------------------------

move the current column left                      M-LEFT/RIGHT
kill the current column                           M-S-LEFT
insert new column to left of cursor position      M-S-RIGHT

move the current row up/down                      M-UP/DOWN
kill the current row or horizontal line           M-S-UP
insert new row above the current row              M-S-DOWN
insert hline below (C-u : above) current row      C-c -
insert hline and move to line below it            C-c RET
sort lines in region                              C-c ^

--------------------------------------------------------------------------------
Regions
--------------------------------------------------------------------------------

cut/copy/paste rectangular region                 C-c C-x C-w/M-w/C-y
fill paragraph across selected cells              C-c C-q

--------------------------------------------------------------------------------
Miscellaneous
--------------------------------------------------------------------------------

to limit column width to N characters, use        ...| <N> |...
edit the current field in a separate window       C-c `
make current field fully visible                  C-u TAB
export as tab-separated file                      M-x org-table-export
import tab-separated file                         M-x org-table-import
sum numbers in current column/rectangle           C-c +

--------------------------------------------------------------------------------
Tables created with the table.el package
--------------------------------------------------------------------------------

insert a new table.el table                       C-c ~
recognize existing table.el table                 C-c C-c
convert table (Org-mode <-> table.el)             C-c ~

--------------------------------------------------------------------------------
Spreadsheet
--------------------------------------------------------------------------------

Formulas typed in field are executed by TAB,
RET and C-c C-c.  = introduces a column
formula, := a field formula.

Example: Add Col1 and Col2                        |=$1+$2      |
... with printf format specification              |=$1+$2;%.2f|
... with constants from constants.el              |=$1/$c/$cm |
sum from 2nd to 3rd hline                         |:=vsum(@II..@III)|
apply current column formula                      | = |

set and eval column formula                       C-c =
set and eval field formula                        C-u C-c =
re-apply all stored equations to current line     C-c *
re-apply all stored equations to entire table     C-u C-c *
iterate table to stability                        C-u C-u C-c *
rotate calculation mark through # * ! ^ _ $       C-#
show line, column, formula reference              C-c ?
toggle grid / debugger                            C-c }/{

--------------------------------------------------------------------------------
Formula Editor
--------------------------------------------------------------------------------

edit formulas in separate buffer                  C-c '
exit and install new formulas                     C-c C-c
exit, install, and apply new formulas             C-u C-c C-c
abort                                             C-c C-q
toggle reference style                            C-c C-r
pretty-print Lisp formula                         TAB
complete Lisp symbol                              M-TAB
shift reference point                             S-cursor
shift test line for column references             M-up/down
scroll the window showing the table               M-S-up/down
toggle table coordinate grid                      C-c }

================================================================================
Links
================================================================================

globally store link to the current location       C-c l \noteone
insert a link (TAB completes stored links)        C-c C-l
insert file link with file name completion        C-u C-c C-l
edit (also hidden part of) link at point          C-c C-l

open file links in emacs                          C-c C-o
...force open in emacs/other window               C-u C-c C-o
open link at point                                mouse-1/2
...force open in emacs/other window               mouse-3
record a position in mark ring                    C-c %
jump back to last followed link(s)                C-c &
find next link                                    C-c C-x C-n
find previous link                                C-c C-x C-p
edit code snippet of file at point                C-c '
toggle inline display of linked images            C-c C-x C-v

================================================================================
Working with Code (Babel)
================================================================================

execute code block at point                       C-c C-c
open results of code block at point               C-c C-o
check code block at point for errors              C-c C-v c
insert a header argument with completion          C-c C-v j
view expanded body of code block at point         C-c C-v v
view information about code block at point        C-c C-v I
go to named code block                            C-c C-v g
go to named result                                C-c C-v r
go to the head of the current code block          C-c C-v u
go to the next code block                         C-c C-v n
go to the previous code block                     C-c C-v p
demarcate a code block                            C-c C-v d
execute the next key sequence in the code edit bu C-c C-v x
execute all code blocks in current buffer         C-c C-v b
execute all code blocks in current subtree        C-c C-v s
tangle code blocks in current file                C-c C-v t
tangle code blocks in supplied file               C-c C-v f
ingest all code blocks in supplied file into the  C-c C-v i
switch to the session of the current code block   C-c C-v z
load the current code block into a session        C-c C-v l
view sha1 hash of the current code block          C-c C-v a

================================================================================
Completion
================================================================================

In-buffer completion completes TODO keywords at headline start, TeX
macros after `\', option keywords after `#-', TAGS
after  `:', and dictionary words elsewhere.

complete word at point                            M-TAB




================================================================================
TODO Items and Checkboxes
================================================================================

rotate the state of the current item              C-c C-t
select next/previous state                        S-LEFT/RIGHT
select next/previous set                          C-S-LEFT/RIGHT
toggle ORDERED property                           C-c C-x o
view TODO items in a sparse tree                  C-c C-v
view 3rd TODO keyword's sparse tree               C-3 C-c C-v

set the priority of the current item              C-c , [ABC]
remove priority cookie from current item          C-c , SPC
raise/lower priority of current item              S-UP/DOWN\notetwo

insert new checkbox item in plain list            M-S-RET
toggle checkbox(es) in region/entry/at point      C-c C-x C-b
toggle checkbox at point                          C-c C-c
update checkbox statistics (C-u : whole file)     C-c #

================================================================================
Tags
================================================================================

set tags for current heading                      C-c C-q
realign tags in all headings                      C-u C-c C-q
create sparse tree with matching tags             C-c \\
globally (agenda) match tags at cursor            C-c C-o

================================================================================
Properties and Column View
================================================================================

set property/effort                               C-c C-x p/e
special commands in property lines                C-c C-c
next/previous allowed value                       S-left/right
turn on column view                               C-c C-x C-c
capture columns view in dynamic block             C-c C-x i

quit column view                                  q
show full value                                   v
edit value                                        e
next/previous allowed value                       n/p or S-left/right
edit allowed values list                          a
make column wider/narrower                        > / <
move column left/right                            M-left/right
add new column                                    M-S-right
Delete current column                             M-S-left


================================================================================
Timestamps
================================================================================

prompt for date and insert timestamp              C-c .
like C-c . but insert date and time format        C-u C-c .
like C-c . but make stamp inactive                C-c !
insert DEADLINE timestamp                         C-c C-d
insert SCHEDULED timestamp                        C-c C-s
create sparse tree with all deadlines due         C-c / d
the time between 2 dates in a time range          C-c C-y
change timestamp at cursor 卤1 day                S-RIGHT/LEFT\notetwo
change year/month/day at cursor by 卤1            S-UP/DOWN\notetwo
access the calendar for the current date          C-c >
insert timestamp matching date in calendar        C-c <
access agenda for current date                    C-c C-o
select date while prompted                        mouse-1/RET
toggle custom format display for dates/times      C-c C-x C-t


--------------------------------------------------------------------------------
Clocking time
--------------------------------------------------------------------------------

start clock on current item                       C-c C-x C-i
stop/cancel clock on current item                 C-c C-x C-o/x
display total subtree times                       C-c C-x C-d
remove displayed times                            C-c C-c
insert/update table with clock report             C-c C-x C-r

================================================================================
Agenda Views
================================================================================

add/move current file to front of agenda          C-c [
remove current file from your agenda              C-c ]
cycle through agenda file list                    C-'
set/remove restriction lock                       C-c C-x </>

compile agenda for the current week               C-c a a \noteone
compile global TODO list                          C-c a t \noteone
compile TODO list for specific keyword            C-c a T \noteone
match tags, TODO kwds, properties                 C-c a m \noteone
match only in TODO entries                        C-c a M \noteone
find stuck projects                               C-c a # \noteone
show timeline of current org file                 C-c a L \noteone
configure custom commands                         C-c a C \noteone
agenda for date at cursor                         C-c C-o

--------------------------------------------------------------------------------
Commands available in an agenda buffer
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
View Org file
--------------------------------------------------------------------------------

show original location of item                    SPC/mouse-3
show and recenter window                          L
goto original location in other window            TAB/mouse-2
goto original location, delete other windows      RET
show subtree in indirect buffer, ded.\ frame      C-c C-x b
toggle follow-mode                                F

--------------------------------------------------------------------------------
Change display
--------------------------------------------------------------------------------

delete other windows                              o
view mode dispatcher                              v
switch to day/week/month/year/def view            d w vm vy vSP
toggle diary entries / time grid / habits         D / G / K
toggle entry text / clock report                  E / R
toggle display of logbook entries                 l / v l/L/c
toggle inclusion of archived trees/files          v a/A
refresh agenda buffer with any changes            r / g
filter with respect to a tag                      /
save all org-mode buffers                         s
display next/previous day,week,...                f / b
goto today / some date (prompt)                   . / j

--------------------------------------------------------------------------------
Remote editing
--------------------------------------------------------------------------------

digit argument                                    0-9
change state of current TODO item                 t
kill item and source                              C-k
archive default                                   $ / a
refile the subtree                                C-c C-w
set/show tags of current headline                 : / T
set effort property (prefix=nth)                  e
set / compute priority of current item            , / P
raise/lower priority of current item              S-UP/DOWN\notetwo
run an attachment command                         C-c C-a
schedule/set deadline for this item               C-c C-s/d
change timestamp one day earlier/later            S-LEFT/RIGHT\notetwo
change timestamp to today                         >
insert new entry into diary                       i
start/stop/cancel the clock on current item       I / O / X
jump to running clock entry                       J
mark / unmark / execute bulk action               m / u / B

--------------------------------------------------------------------------------
Misc
--------------------------------------------------------------------------------

follow one or offer all links in current entry    C-c C-o

--------------------------------------------------------------------------------
Calendar commands
--------------------------------------------------------------------------------

find agenda cursor date in calendar               c
compute agenda for calendar cursor date           c
show phases of the moon                           M
show sunrise/sunset times                         S
show holidays                                     H
convert date to other calendars                   C

--------------------------------------------------------------------------------
Quit and Exit
--------------------------------------------------------------------------------

quit agenda, remove agenda buffer                 q
exit agenda, remove all agenda buffers            x

================================================================================
LaTeX and cdlatex-mode
================================================================================

preview LaTeX fragment                            C-c C-x C-l
expand abbreviation (cdlatex-mode)                TAB
insert/modify math symbol (cdlatex-mode)          ` / '
insert citation using RefTeX                      C-c C-x [

================================================================================
Exporting and Publishing
================================================================================

Exporting creates files with extensions .txt and .html
in the current directory.  Publishing puts the resulting file into
some other place.

export/publish dispatcher                         C-c C-e

export visible part only                          C-c C-e v
insert template of export options                 C-c C-e t
toggle fixed width for entry or region            C-c :
toggle pretty display of scripts, entities        C-c C-x {\tt\char`\}

--------------------------------------------------------------------------------
Comments: Text not being exported
--------------------------------------------------------------------------------

Lines starting with # and subtrees starting with COMMENT are
never exported.

toggle COMMENT keyword on entry                   C-c ;

================================================================================
Dynamic Blocks
================================================================================

update dynamic block at point                     C-c C-x C-u
update all dynamic blocks                         C-u C-c C-x C-u


* echo
